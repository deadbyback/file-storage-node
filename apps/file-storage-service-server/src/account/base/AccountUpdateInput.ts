/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Max,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { SubscriptionPlanUpdateManyWithoutAccountsInput } from "./SubscriptionPlanUpdateManyWithoutAccountsInput";
import { Type } from "class-transformer";
import { ArchiveUpdateManyWithoutAccountsInput } from "./ArchiveUpdateManyWithoutAccountsInput";
import { AccountUpdateManyWithoutAccountsInput } from "./AccountUpdateManyWithoutAccountsInput";
import { AccountWhereUniqueInput } from "./AccountWhereUniqueInput";

@InputType()
class AccountUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  organizationId?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionPlanUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionPlanUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => SubscriptionPlanUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  subscriptionPlans?: SubscriptionPlanUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => ArchiveUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => ArchiveUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => ArchiveUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  archives?: ArchiveUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => AccountUpdateManyWithoutAccountsInput,
  })
  @ValidateNested()
  @Type(() => AccountUpdateManyWithoutAccountsInput)
  @IsOptional()
  @Field(() => AccountUpdateManyWithoutAccountsInput, {
    nullable: true,
  })
  accounts?: AccountUpdateManyWithoutAccountsInput;

  @ApiProperty({
    required: false,
    type: () => AccountWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AccountWhereUniqueInput)
  @IsOptional()
  @Field(() => AccountWhereUniqueInput, {
    nullable: true,
  })
  account?: AccountWhereUniqueInput | null;
}

export { AccountUpdateInput as AccountUpdateInput };
